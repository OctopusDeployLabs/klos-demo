name: build
on:
  push:
    paths-ignore:
      - '.octopus/**'
      - 'README.md'
    tags:
      - v*
env:
  REGISTRY: ghcr.io
jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get image tag
        id: get_image_tag
        run: |
          IMAGE_ID=${{ env.REGISTRY }}/${{ github.repository }}
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          echo "image_tag=${IMAGE_ID}:${VERSION}" >> "$GITHUB_OUTPUT"
          echo "release_version=${VERSION}" >> "$GITHUB_OUTPUT"
      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64
          push: true
          tags: ${{ steps.get_image_tag.outputs.image_tag }}
          labels: "runnumber=${{ github.run_id }}"
      - name: Log in to Octopus Deploy 🐙
        uses: OctopusDeploy/login@v1
        with:
          server: https://samples.octopus.app
          service_account_id: c8bb4846-721d-4199-9c41-0d673156bb35

      - name: Create a worker release in Octopus Deploy 🐙
        uses: OctopusDeploy/create-release-action@v3
        with:
          space: "Live Object Status"
          project: "Worker"
          git_ref: ${{ (github.ref_type == 'tag' && github.event.repository.default_branch ) || (github.head_ref || github.ref) }}
          git_commit: ${{ github.event.after || github.event.pull_request.head.sha }}
          release_number: ${{ steps.get_image_tag.outputs.release_version }}
          ignore_existing: true