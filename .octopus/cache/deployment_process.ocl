step "say-hello" {
    name = "Say Hello"
    properties = {
        Octopus.Action.TargetRoles = "kubernetes"
    }

    action {
        action_type = "Octopus.Script"
        properties = {
            Octopus.Action.RunOnServer = "false"
            Octopus.Action.Script.ScriptBody = "echo \"Hello!\""
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "Bash"
            OctopusUseBundledTooling = "False"
        }
        worker_pool_variable = ""
    }
}

step "deploy-to-kubernetes" {
    name = "Deploy to Kubernetes"
    properties = {
        Octopus.Action.TargetRoles = "kubernetes"
    }

    action {
        action_type = "Octopus.KubernetesDeployRawYaml"
        properties = {
            Octopus.Action.GitRepository.Source = "External"
            Octopus.Action.Kubernetes.DeploymentTimeout = "180"
            Octopus.Action.Kubernetes.ResourceStatusCheck = "False"
            Octopus.Action.Kubernetes.ServerSideApply.Enabled = "True"
            Octopus.Action.Kubernetes.ServerSideApply.ForceConflicts = "True"
            Octopus.Action.KubernetesContainers.CustomResourceYamlFileName = "kubernetes/cache.yaml"
            Octopus.Action.KubernetesContainers.DeploymentWait = "NoWait"
            Octopus.Action.KubernetesContainers.Namespace = "klosdemo-#{Octopus.Environment.Name | toLower}"
            Octopus.Action.RunOnServer = "false"
            Octopus.Action.Script.ScriptSource = "GitRepository"
        }
        worker_pool_variable = ""

        git_dependencies {
            default_branch = "main"
            file_path_filters = ["kubernetes/cache.yaml"]
            git_credential_type = "Anonymous"
            repository_uri = "https://github.com/OctopusDeployLabs/klos-demo.git"
        }
    }
}